import { Pcset, PcsetChroma, PcsetNum } from "@tonaljs/pcset";
export declare type ChordQuality = "Major" | "Minor" | "Augmented" | "Diminished" | "Unknown";
export interface ChordType extends Pcset {
    name: string;
    quality: ChordQuality;
    aliases: string[];
}
declare type ChordTypeName = string | PcsetChroma | PcsetNum;
/**
 * Given a chord name or chroma, return the chord properties
 * @param {string} source - chord name or pitch class set chroma
 * @example
 * import { chord } from 'tonaljs/chord-dictionary'
 * chord('major')
 */
export declare function chordType(type: ChordTypeName): ChordType;
/**
 * Keys used to reference chord types
 */
export declare function keys(): string[];
/**
 * Return a list of all chord types
 */
export declare function entries(): ChordType[];
/**
 * Clear the dictionary
 */
export declare function clear(): void;
/**
 * Add a chord to the dictionary.
 * @param intervals
 * @param aliases
 * @param [fullName]
 */
export declare function add(intervals: string[], aliases: string[], fullName?: string): void;
export declare function addAlias(chord: ChordType, alias: string): void;
export {};
