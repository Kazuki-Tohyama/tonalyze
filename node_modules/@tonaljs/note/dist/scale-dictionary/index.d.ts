import { Pcset, PcsetChroma, PcsetNum } from "@tonaljs/pcset";
/**
 * Properties for a scale in the scale dictionary. It's a pitch class set
 * properties with the following additional information:
 * - name: the scale name
 * - aliases: alternative list of names
 * - intervals: an array of interval names
 */
export interface ScaleType extends Pcset {
    readonly name: string;
    readonly aliases: string[];
}
export declare const NoScaleType: ScaleType;
declare type ScaleTypeName = string | PcsetChroma | PcsetNum;
/**
 * Given a scale name or chroma, return the scale properties
 * @param {string} type - scale name or pitch class set chroma
 * @example
 * import { scale } from 'tonaljs/scale-dictionary'
 * scale('major')
 */
export declare function scaleType(type: ScaleTypeName): ScaleType;
/**
 * Return a list of all scale types
 */
export declare function entries(): ScaleType[];
/**
 * Keys used to reference scale types
 */
export declare function keys(): string[];
/**
 * Clear the dictionary
 */
export declare function clear(): void;
/**
 * Add a scale into dictionary
 * @param intervals
 * @param name
 * @param aliases
 */
export declare function add(intervals: string[], name: string, aliases?: string[]): ScaleType;
export declare function addAlias(scale: ScaleType, alias: string): void;
export {};
